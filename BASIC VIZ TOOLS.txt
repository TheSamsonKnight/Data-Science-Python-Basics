BASIC VISUALIZATION TOOLS
============================================================================================================================================================================================================
AREA PLOT: USED TO REPRESENT CUMULATED TOTALS USING NUMBERS OR PERCENTAGE OVER TIME
	-TRYING TO COMPARE TWO OR MORE QUANTITIES
YEARS = LIST(MAP(STR, RANGE(1980, 2014)))
DF_SAMPLE.SORT_VALUES(['TOTAL'], ASCENDING=FALSE, AXIS=0, INPLACE=TRUE)
DF_TOP5 = DF_SAMPLE.HEAD()
DF_TOP5 = DF_TOP5(YEARS).TRANSPOSE()
IMPORT MATPLOTLIB AS MPL
IMPORT MATPLOTLIB.PYPLOT AS PLT
DF_TOP5.PLOT(KIND='AREA')
PLT.TITLE('IMMIGRATION')
PLT.YLABEL('NUMBER OF IMMIGRANTS')
PLT.XLABEL('YEARS')
PLT.SHOW()
======================================================================================================
HISTOGRAMS

A WAY OF REPRESENTING THE FREQUENCY DISTRIBUTION OF A VARIABLE
	-PARTITIONS THE SPREAD OF THE NUMERIC DATASET INTO BINS, ASSIGNS DATAPOINT TO BIN, COUNTS DATA 	POINTS ASSIGNED TO EACH BIN

IMPORT MATPLOTLIB AS MPL
IMPORT NUMPY AS NP
IMPORT MATPLOTLIB.PYPLOT AS PLT
COUNT, BIN_EDGES=NP.HISTOGRAM(DF_SAMPLE['2013'])
DF_SAMPLE['2013'].PLOT(KIND='HIST', XTICKS=BIN_EDGES)
PLT.TITLE('IMMIGRATION')
PLT.XLABEL('NUMBER OF COUNTRIES')
======================================================================================================
BAR CHART

USED TO COMPARE THE VALUES OF A VARIABLE AT A GIVEN POINT IN TIME
	-LENGTH OF EACH BAR IS PROPORTIONAL TO THE VALUE OF THE ITEM THAT IT REPRESENTS

IMPORT MATPLOTLIB AS MPL
IMPORT MATPLOTLIB.PYPLOT AS PLT
YEARS= LIST(STR, RANGE(1980, 2014)))
DF_NEW = DF_SAMPLE.LOC['ICELAND', YEARS]
DF_NEW.PLOT(KIND='BAR')
PLT.TITLE('IMMIGRATION')
PLT.XLABEL('YEAR')
PLT.YLABEL('NUMBER OF IMMIGRANTS')
PLT.SHOW()
PLT.YLABEL('NUMBER OF IMMIGRANTS')
PLT.SHOW()
======================================================================================================
PIE CHART

CIRCULAR STATISTICAL GRAPHIC DIVIDED INTO SLICES TO ILLUSTRATE NUMERICAL PROPORTION

IMPORT MATPLOTLIB AS MPL
IMPORT MATPLOTLIB.PYPLOT AS PLT
DF_1['TOTAL'].PLOT(KIND='PIE')
PLT.TITLE('IMMIGRATION')
PLT.SHOW()
======================================================================================================
BOX PLOT

A STATISTICAL REPRESENTATION OF THE DISTRIBUTION OF GIVEN DATA THROUGH 5 MAIN DIMENSIONS:
	-MIN: SMALL NUMBER IN DATA
	-1ST QUARTILE: 25% OF DATA
	-MEDIUN: 50% OF DATA
	-3RD QUARTILE: 75% OF DATA
	-MAX: MAJORITY OF DATA
	(-OUTLIERS: INCONSISTENCY OF DATA)

IMPORT MATPLOTLIB AS MPL
IMPORT MATPLOTLIB.PYPLOT AS PLT
DF_2 = DF_SAMPLE.LOC(['JAPAN'], YEARS).TRANSPOSE()
DF_2.PLOT(KIND='BOX')
PLT.TITLE('IMMIGRATION')
PLT.YLABEL('NUMBER OF IMMIGRANTS')
PLT.SHOW()
======================================================================================================
SCATTER PLOTS

DISPLAYS VALUES PERTAINING TO TYPICALLY TWO VARIABLES AGAINST EACH OTHER, USUALLY ITS A DEPENDENT VARIABLE VS INDEPENDENT VARIABLE TO DETERMINE IF CORRELATION/RELATIONSHIP EXIST

IMPORT MATPLOTLIB AS MPL
IMPORT MATPLOTLIB.PYPLOT AS PLT
DF_TOTAL.PLOT(KIND='SCATTER', X='YEAR', Y='TOTAL')
PLT.TITLE('IMMIGRATION')
PLT.XLABEL('YEAR')
PLT.YLABEL('NUMBER OF IMMIGRANTS')
PLT.SHOW()
======================================================================================================
WAFFLE CHART

VISUALIZE DATA IN RELATION TO A WHOLE OR TO HIGHLIGHT PROGRESS AGAINST A GIVEN THRESHOLD
-NORMALLY CREATED TO DISPLAY PROGRESS TOWARD GOALS

IMPORT MATPLOTLIB AS MPL
IMPORT MATPLOTLIB.PYPLOT AS PLT

======================================================================================================
WORD CLOUDS

A DEPICTION OF THE FREQUENCY OF DIFFERENT WORDS IN SPECIFIC TEXTUAL DATA
======================================================================================================
SEABORN AND REGRESSION PLOTS

-A PYTHON VIZ LIBRARY BASED ON MATPLOTLIB
	-VIZ NEED ~20 COMMANDS IN MATPLOTLIB >> SEABORN REDUCES COMMANDS BY 5X

IMPORT SEABORN AS SNS
AX= SNS.REGPLOT(X='YEAR', Y='TOTAL', DATA=DF_TOTAL) ***BASIC FORMAT

IMPORT SEABORN AS SNS
AX= SNS.REGPLOT(X='YEAR', Y='TOTAL', DATA+DF_TOTAL, COLOR='GREEN', MARKER='+')
============================================================================================================================================================================================================
VISUALIZING GEO SPATIAL DATA

FOLIUM

-A POWERFUL DATA VISUALIZATION LIBRARY THAT HELPS YOU CREATE SEVERAL TYPES OF LEAFLET MAPS
	-CREATE A MAP OF ANY LOCATION IN THE WORLD AS LONG AS YOU KNOW LATTITUDE AND LONGITUDE
	-CREATE A MAP OF SUPERIMPOSED MARKERS AS WELL AS CLUSTERS OF MARKERS ON TOP OF THE MAP FOR 		MORE VIZ
	-CREATE MAPS OF DIFFERENT STYLES 

-IT ENABLES BOTH THE BINDING OF DATA TO A MAP FOR CHOROPLETH VIZ AS WELL AS PASSING VIZ AS MARKERS ON THE MAP
-THE LIBRARY HAS A NUMBER OF BUILT-IN TILESETS FROM OPENSTREETMAPS, MAPBOX, STAMEN, AND SUPPORTS CUSTOM TILESETS WITH MAPBOX API KEYS

WORLD_MAP = FOLIUM.MAP()
WOLRD_MAP		***DISPLAYS MAP

WORLD_MAP = FOILUM.MAP(LOCATION=[56.130, -106.35], ZOOM_START=4, TILES='STAMEN TERRAIN') 
				-CANADA COORDINATES
======================================================================================================
MAPS WITH MARKERS

CANADA_MAP = FOLIUM.MAP(LOCATION=[56.130, -106.35], ZOOM_START=4)
#ADDING RED INDICATOR
ONTARIO = FOLIUM.MAP.FEATUREGROUP()

ONTARIO.ADD_CHILD(
	FOLIUM.FEATURES.CIRCLEMARKER([51.25, -85.32], RADIUS=5, COLOR='RED', FILL_COLOR='RED')
)
CANADA_MAP.ADD_CHILD(ONTARIO)
FOLIUM.MARKER([51.25, -85.32], POPUP='ONTARIO').ADD_TO(CANADA_MAP)

CANADA_MAP
======================================================================================================
CHOROPLETH MAPS

THEMATIC MAPS IN WHICH AREAS ARE SHADED/PATTERNED IN PROPORTION TO THE MEASUREMENT OF THE STATISTICAL VARIABLE BEING DISPLAYED ON THE MAP
	-COLOR GRADIENT MAPS(DARKER IMPLIES MORE DENSITY, LIGHTER IMPLIES SPARSE)

WORLD_MAP =FOLIUM.MAP(ZOOM_START=2, TILES="MAPBOX BRIGHT')
WORLD_GEO=R'WORLD_COUNTRIES.JSON'			***JSON GEO FILE
WORLD_MAP.CHOROPLETH(
	GEO_PATH=WORLD_GEO,
	DATA=DF_CANDA,
	COLUMNS=['COUNTRY','TOTAL'],
	KEY_ON='FEATURE.PROPERTIES.NAME',
	FILL_COLOR='Y10rRd',
	LEGEND_NAME="IMMIGRATION"
)