STORED PROCEDURES
======================================================================================================
-SET OF SQL STATEMENTS STORED AND EXECUTED ON THE DATABASE SERVER
	-INSTEAD OF SENDING MULTI SQL STATEMENTS FROM CLIENT TO SERVER, YOU ENCAPSULATE THEM IN A 	STORED PROCEDURE ON THE SERVER AND SEND ONE STATEMENT FROM THE CLIENT TO EXECUTE
-MANY LANG
-ACCEPT INFO IN THE FORM OF PARAMETERS >>> PERFORM CRUD
-RETURN RESULTS TO THE CLIENT

BENEFITS:
-REDUCTION IN NETWORK TRAFFIC >>> ONLY ONE CALL IS NEEDED TO EXECUTE MULTI STATEMENTS
-IMPROVEMENT IN PERFORMANCE >>> PROCESSING HAPPENS ON THE SERVER WHERE THE DATA IS STORE AND ONLY FINAL RESULTS PASSED BACK TO THE CLIENT
-REUSE OF CODE >>> MULTI APPS CAN USE THE SAME STORED PROCEDURE FOR THE SAME JOB
-INCREASE IN SECURITY >>> NOT ALL COLUMNS ARE EXPOSED TO CLIENT-SIDE DEV, CAN USE SERVER-SIDE LOGIC TO VALIDATE DATA BEFORE ACCEPTING INTO THE SYSTEM

CON:
-SQL IS NOT A PROGRAMMING LANG, SHOULD NOT WRITE ALL BUSINESS LOGIC IN STORED PROCEDURES

SYNTAX:
CREAT PROCEDURE UPDATE_SAL (IN empNUM CHAR(6), IN RATING SMALLINT)
  LANGUAGE SQL
  BEGIN
	IF RATING = 1 THEN
	UPDATE EMPLOYESS
	   SET SALARY = SALARY *1.10
	   WHERE EMP_ID = empNUM;
	ELSE
	   UPDATE EMPLOYEE
	   SET SALARY = SALARY *1.05
	   WHERE emp_ID = empNUM;
	ELSE IF;
END

WORKING WITH STORED PROCEDURES:
-CALL FROM EXTERNAL APPLICATIONS
-DYNAMIC SQL STATEMENTS
	CALL UPDATE_SAL('E1001',1)